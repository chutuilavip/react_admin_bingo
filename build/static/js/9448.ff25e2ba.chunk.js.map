{"version":3,"file":"static/js/9448.ff25e2ba.chunk.js","mappings":"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","sources":["views/system/tables/Tables.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Swal from 'sweetalert2'\n// import { CButton, CCol, CForm, CFormInput, CImage } from '@coreui/react'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CForm,\n  CTableBody,\n  CContainer,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CFormInput,\n  CFormSelect, CImage\n} from '@coreui/react'\nimport './style.css'\nimport ReactPaginate from 'react-paginate'\n\nconst token = localStorage.getItem('token_key')\n\nconst getSignature = async () => {\n  try {\n    const result = await axios({\n      method: `Get`,\n      url: `${process.env.REACT_APP_URL_API}/api/admin/sys`,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n\n    return result.data.res.data\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nconst formData = new FormData()\n\nconst Tables = () => {\n  const [history, setHistory] = useState([])\n  const [data, setData] = useState([])\n  const [title, setTitle] = useState('')\n  const [version, setVersion] = useState('')\n  const [maintainContent, setMaintainContent] = useState('')\n\n  useEffect(() => {\n    async function ss() {\n      const data = await getSignature()\n      setHistory(data.history_version)\n      setData(data.sys)\n      setTitle(data.title)\n      setVersion(data.version)\n      setMaintainContent(data.maintainContent)\n    }\n    ss()\n  }, [])\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const onChangeVersion = (e) => {\n    setVersion(e.target.value)\n  }\n\n  const onChangemaintainContent = (e) => {\n    setMaintainContent(e.target.files[0])\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    formData.append('title', title)\n    formData.append('version', version)\n    formData.append('maintain_content', maintainContent)\n    axios({\n      method: 'Post',\n      url: `${process.env.REACT_APP_URL_API}/api/admin/sys/update`,\n      data: formData,\n      headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'multipart/form-data' },\n    })\n      .then(async function (response) {\n        console.log(response)\n        const data = await getSignature()\n        setData(data)\n        if (response.data.status === 200) {\n          return Swal.fire({\n            title: 'Success',\n            text: response.data.success,\n            icon: 'success',\n            confirmButtonText: 'OK',\n          })\n        } else {\n          return Swal.fire({\n            title: 'Error',\n            text: response.data.error,\n            icon: 'error',\n            confirmButtonText: 'OK',\n          })\n        }\n      })\n      .catch(function (err) {\n        console.log(err)\n      })\n  }\n\n  return (\n    <div>\n      <CForm className=\"form_system\">\n        <CCol sm={12} className=\"d-flex align-items-center\">\n          <CFormInput label=\"Title\" type=\"text\" defaultValue={(data.title === 'undefined' ? '' : data.title)} onChange={onChangeTitle} />\n        </CCol>\n\n        <CCol sm={12} className=\"d-flex align-items-center mt-4\">\n          <CFormInput\n            label=\"Version\"\n            type=\"text\"\n            defaultValue={data.version}\n            onChange={onChangeVersion}\n          />\n        </CCol>\n\n        <CCol sm={12} className=\"d-flex align-items-center mt-4\">\n          <CFormInput\n            label=\"Image\"\n            type=\"file\"\n            defaultValue={data.maintainContent}\n            onChange={onChangemaintainContent}\n          />\n        </CCol>\n\n        {data.maintain_content === 'undefined' ? (\n          <></>\n        ) : (\n          <>\n            <CCol sm={12} className=\"mt-4 system_img\">\n              <CImage rounded src={data.maintain_content} alt=\"Image\" width={200} height={200} />\n            </CCol>\n          </>\n        )}\n\n        <CCol sm={12} className=\"d-flex align-items-center mt-4\">\n          <CFormInput\n            label=\"File Apk\"\n            type=\"file\"\n            onChange={(e) => formData.append('apk', e.target.files[0])}\n          />\n        </CCol>\n        <div className=\"d-flex justify-content-end mt-4\">\n          <CButton onClick={handleSubmit} className=\"btn_update\" type=\"submit\">\n            Submit\n          </CButton>\n        </div>\n      </CForm>\n      <br></br>\n      <CCardHeader>\n        <h3>Lịch sử version</h3>\n      </CCardHeader>\n      <CModalBody>\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardBody>\n                <CTable>\n                  <CTableHead>\n                    <CTableRow>\n                      <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Version</CTableHeaderCell>\n                      <CTableHeaderCell scope=\"col\">Apk</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {history.map((item, index) => (\n                      <CTableRow key={item.id}>\n                        <CTableDataCell scope=\"row\">{index}</CTableDataCell>\n                        <CTableDataCell scope=\"row\">{item.title}</CTableDataCell>\n                        <CTableDataCell>{item.apk}</CTableDataCell>\n                      </CTableRow>\n                    ))}\n                  </CTableBody>\n                </CTable>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CModalBody>\n    </div>)\n}\n\nexport default Tables\n"],"names":["token","localStorage","getItem","getSignature","axios","method","url","process","headers","Authorization","result","data","res","console","log","formData","FormData","useState","history","setHistory","setData","title","setTitle","version","setVersion","maintainContent","setMaintainContent","useEffect","history_version","sys","ss","className","sm","label","type","defaultValue","onChange","e","target","value","files","maintain_content","rounded","src","alt","width","height","append","onClick","preventDefault","then","response","status","Swal","text","success","icon","confirmButtonText","error","catch","err","scope","map","item","index","apk","id"],"sourceRoot":""}