{"version":3,"file":"static/js/3357.2f8d0db9.chunk.js","mappings":"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","sources":["views/pages/register/Register.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport './style.css'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nconst formData = new FormData()\n\nconst Register = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const navigate = useNavigate()\n  const [error, setError] = useState({})\n\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const onChangeConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value)\n  }\n\n  const validation = (e) => {\n    const msg = {}\n\n    if (username === '') {\n      msg.username = 'Username is requied!'\n    } else if (username.length < 4) {\n      msg.username = 'Username should be at least 4 charcters long'\n    }\n\n    if (password === '') {\n      msg.password = 'Password is requied!'\n    } else if (password.length < 6) {\n      msg.password = 'Password should be at least 8 charcters long'\n    }\n\n    if (confirmPassword === '') {\n      msg.confirmPassword = 'Password is requied!'\n    } else if (confirmPassword.length < 6) {\n      msg.confirmPassword = 'Password should be at least 8 charcters long'\n    } else if (password !== confirmPassword) {\n      msg.confirmPassword = 'Password does not match!'\n    }\n\n    setError(msg)\n    if (Object.keys(msg).length > 0) return false\n    return true\n  }\n\n  const handleKeyUp = (e) => {\n    validation()\n  }\n\n  const handleSubmit = async (e) => {\n    const isValid = validation()\n\n    if (isValid) {\n      formData.append('adminID', username)\n      formData.append('adminPW', password)\n      formData.append('password_confirmation', confirmPassword)\n\n      await axios({\n        method: 'Post',\n        url: `${process.env.REACT_APP_URL_API}/api/auth/register`,\n        data: formData,\n        headers: { 'Content-Type': 'application/json' },\n      })\n        .then(function (response) {\n          toast('Register success!')\n          navigate('/login')\n        })\n        .catch((err) => {\n          if (err.response.data.errors !== '') {\n            err.response.data.errors.map((item, index) => toast.error(item))\n          } else if (err.response.data.message !== '') {\n            toast.error(err.response.data.message)\n          }\n        })\n    }\n  }\n\n  return (\n    <div className=\"bg-light d-flex flex-row align-items-center\">\n      <CForm onSubmit={handleSubmit}>\n        <p className=\"text-medium-emphasis\">Create your account</p>\n        <CInputGroup className=\"mb-3\">\n          <CInputGroupText>\n            <CIcon icon={cilUser} />\n          </CInputGroupText>\n          <CFormInput\n            placeholder=\"Username\"\n            autoComplete=\"username\"\n            name=\"adminID\"\n            defaultValue={username}\n            onChange={onChangeUsername}\n            onKeyUp={handleKeyUp}\n          />\n        </CInputGroup>\n\n        {error.username && <p className=\"text-danger\">{error.username}</p>}\n        {/* <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput placeholder=\"Email\" autoComplete=\"email\" />\n                  </CInputGroup> */}\n        <CInputGroup className=\"mb-3\">\n          <CInputGroupText>\n            <CIcon icon={cilLockLocked} />\n          </CInputGroupText>\n          <CFormInput\n            type=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"new-password\"\n            name=\"adminPW\"\n            defaultValue={password}\n            onChange={onChangePassword}\n            onKeyUp={handleKeyUp}\n          />\n        </CInputGroup>\n\n        {error.password && <p className=\"text-danger\">{error.password}</p>}\n\n        <CInputGroup className=\"mb-4\">\n          <CInputGroupText>\n            <CIcon icon={cilLockLocked} />\n          </CInputGroupText>\n          <CFormInput\n            type=\"password\"\n            placeholder=\"Repeat password\"\n            autoComplete=\"new-password\"\n            name=\"password_confirmation\"\n            defaultValue={confirmPassword}\n            onChange={onChangeConfirmPassword}\n            onKeyUp={handleKeyUp}\n          />\n        </CInputGroup>\n\n        {error.confirmPassword && <p className=\"text-danger\">{error.confirmPassword}</p>}\n\n        <div className=\"d-grid\">\n          <CButton onClick={handleSubmit} color=\"success\">\n            Create Account\n          </CButton>\n        </div>\n      </CForm>\n    </div>\n  )\n}\n\nexport default Register\n"],"names":["formData","FormData","useState","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","navigate","useNavigate","error","setError","validation","e","msg","length","Object","keys","handleKeyUp","handleSubmit","append","axios","method","url","process","data","headers","then","response","toast","catch","err","errors","map","item","index","message","className","onSubmit","icon","cilUser","placeholder","autoComplete","name","defaultValue","onChange","target","value","onKeyUp","cilLockLocked","type","onClick","color"],"sourceRoot":""}