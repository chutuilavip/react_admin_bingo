{"version":3,"file":"static/js/6606.21bf25af.chunk.js","mappings":"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","sources":["views/transaction/tables/Tables.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { LoadingOutlined, FileExclamationOutlined } from '@ant-design/icons'\n\nimport {\n  CContainer,\n  CForm,\n  CFormInput,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n  CTable,\n  CTableBody,\n  // CTableCaption,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport ReactPaginate from 'react-paginate'\nimport './style.css'\n\nconst token = localStorage.getItem('token_key')\nlet limit = 10\n\nconst Tables = () => {\n  const [data, setData] = useState([])\n  const [page, setPage] = useState(0)\n  const [dataForm, setDataForm] = useState([])\n  const [detail, setDetail] = useState(false)\n  const [nickname, setNickname] = useState('')\n  const [from_acc, setFrom_acc] = useState('')\n\n  const getSignature = async () => {\n    try {\n      const result = await axios({\n        method: `Get`,\n        url: `${process.env.REACT_APP_URL_API}/api/history/transactions?page=1&limit=${limit}`,\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        params: {\n          nickName: nickname,\n          from_account: from_acc,\n        },\n      })\n      return result\n    } catch (err) {\n      console.log('err')\n    }\n  }\n  async function getPage() {\n    const data = await getSignature()\n    console.log(data)\n    const total = data.data.res.total\n    setPage(Math.ceil(total / limit))\n    setData(data)\n  }\n\n  useEffect(() => {\n    getPage()\n    //getEdit()\n  }, [limit])\n\n  const fetchPage = async (currentPage) => {\n    try {\n      const result = await axios({\n        method: `Get`,\n        url: `${process.env.REACT_APP_URL_API}/api/history/transactions?page=${currentPage}&limit=${limit}`,\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      return result\n    } catch (err) {\n      console.log('err')\n    }\n  }\n\n  const handlePageClick = async (data) => {\n    // setPage(data.selected)\n    let currentPage = data.selected + 1\n    const pageFormServer = await fetchPage(currentPage)\n    setData(pageFormServer)\n  }\n\n  useEffect(() => {\n    async function ss() {\n      const data = await getSignature()\n      console.log(data)\n      setData(data)\n    }\n    ss()\n  }, [])\n\n  const getDetail = async (id) => {\n    try {\n      const result = await axios({\n        method: `Get`,\n        url: `${process.env.REACT_APP_URL_API}/api/history/transaction/${id}`,\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      setDataForm(result)\n      return result\n    } catch (err) {\n      console.log('err')\n    }\n  }\n\n  const handleDetail = async (id) => {\n    await getDetail(id)\n\n    setDetail(!detail)\n  }\n\n  return (\n    <div>\n      <CModal className=\"modal_detail\" visible={detail} onClose={() => setDetail(false)}>\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CRow>\n            <CCol xs={17}>\n              <CCard className=\"mb-4\">\n                <CCardBody>\n                  <CTable>\n                    <CTableHead>\n                      <CTableRow>\n                        <CTableHeaderCell scope=\"col\">Prop</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">Data</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      <CTableRow>\n                        <CTableDataCell scope=\"row\">Nickname</CTableDataCell>\n                        <CTableDataCell scope=\"row\">\n                          {dataForm?.data?.res?.data?.NickName}\n                        </CTableDataCell>\n                      </CTableRow>\n                      <CTableRow>\n                        <CTableDataCell scope=\"row\">Type</CTableDataCell>\n                        <CTableDataCell scope=\"row\">\n                          {dataForm?.data?.res?.data?.type}\n                        </CTableDataCell>\n                      </CTableRow>\n                      <CTableRow>\n                        <CTableDataCell scope=\"row\">Token Amount</CTableDataCell>\n                        <CTableDataCell scope=\"row\">\n                          {dataForm?.data?.res?.data?.tokenAmount}\n                        </CTableDataCell>\n                      </CTableRow>\n                      <CTableRow>\n                        <CTableDataCell scope=\"row\">Point Amount</CTableDataCell>\n                        <CTableDataCell scope=\"row\">\n                          {dataForm?.data?.res?.data?.pointAmount}\n                        </CTableDataCell>\n                      </CTableRow>\n                      <CTableRow>\n                        <CTableDataCell scope=\"row\">From</CTableDataCell>\n                        <CTableDataCell scope=\"row\">\n                          {dataForm?.data?.res?.data?.from}\n                        </CTableDataCell>\n                      </CTableRow>\n                      <CTableRow>\n                        <CTableDataCell scope=\"row\">To</CTableDataCell>\n                        <CTableDataCell scope=\"row\">{dataForm?.data?.res?.data?.to}</CTableDataCell>\n                      </CTableRow>\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setDetail(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <CContainer>\n                <CRow className=\"align-items-start\">\n                  <CCol>\n                    <strong>History Transaction Table</strong>\n                  </CCol>\n                  <CCol>\n                    <CForm>\n                      <CFormInput\n                        type=\"email\"\n                        id=\"exampleFormControlInput1\"\n                        placeholder=\"Nick name\"\n                        aria-describedby=\"exampleFormControlInputHelpInline\"\n                        onChange={(event) => setNickname(event.target.value)}\n                      />\n                    </CForm>\n                  </CCol>\n                  <CCol>\n                    <CForm>\n                      <CFormInput\n                        type=\"email\"\n                        id=\"exampleFormControlInput1\"\n                        placeholder=\"From account\"\n                        aria-describedby=\"exampleFormControlInputHelpInline\"\n                        onChange={(event) => setFrom_acc(event.target.value)}\n                      />\n                    </CForm>\n                  </CCol>\n                  <CCol>\n                    <CButton color=\"success\" variant=\"outline\" onClick={getPage}>\n                      Search\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </CContainer>\n            </CCardHeader>\n            <CCardBody>\n              {data?.data?.res?.data?.data ? (\n                data?.data?.res?.data?.total === 0 ? (\n                  <div\n                    style={{\n                      width: '100%',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      flexDirection: 'column',\n                    }}\n                  >\n                    <FileExclamationOutlined style={{ color: '#ccc', fontSize: 50, margin: 20 }} />\n                    <p style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                      No data\n                    </p>\n                  </div>\n                ) : (\n                  <CTable>\n                    <CTableHead>\n                      <CTableRow>\n                        <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">NickName</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">Type</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">Quantity</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">From</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">To</CTableHeaderCell>\n                        <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      {data?.data?.res?.data?.data.map((item, index) => (\n                        <CTableRow key={index}>\n                          <CTableHeaderCell scope=\"row\">{index}</CTableHeaderCell>\n                          <CTableHeaderCell scope=\"row\">{item.NickName}</CTableHeaderCell>\n                          <CTableDataCell scope=\"row\">\n                            {(() => {\n                              switch (item.type) {\n                                case 'swap_to_point':\n                                  return 'Đổi token sang điểm'\n                                case 'swap_to_token':\n                                  return 'Đổi điểm sang token'\n                                default:\n                                  return ''\n                              }\n                            })()}\n                          </CTableDataCell>\n                          <CTableHeaderCell scope=\"row\">\n                            {(() => {\n                              switch (item.type) {\n                                case 'swap_to_point':\n                                  return `${item.tokenAmount} / ${item.pointAmount}`\n                                case 'swap_to_token':\n                                  return `${item.pointAmount} / ${item.tokenAmount}`\n                                default:\n                                  return ''\n                              }\n                            })()}\n                          </CTableHeaderCell>\n                          <CTableHeaderCell scope=\"row\">\n                            {item.from.slice(0, 7)}...{item.from.slice(-5)}\n                          </CTableHeaderCell>\n                          <CTableHeaderCell scope=\"row\">\n                            {item.to !== null ? (\n                              <>\n                                {item.to.slice(0, 7)}...{item.to.slice(-5)}\n                              </>\n                            ) : (\n                              <></>\n                            )}\n                          </CTableHeaderCell>\n                          <CTableHeaderCell scope=\"row\">\n                            <svg\n                              onClick={() => handleDetail(item.id)}\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              className=\"h-6 w-6\"\n                              fill=\"none\"\n                              viewBox=\"0 0 24 24\"\n                              stroke=\"currentColor\"\n                              height={30}\n                              width={30}\n                              style={{ cursor: 'pointer' }}\n                            >\n                              <path d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n                            </svg>\n                          </CTableHeaderCell>\n                        </CTableRow>\n                      ))}\n                    </CTableBody>\n                  </CTable>\n                )\n              ) : (\n                <div\n                  style={{\n                    width: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <LoadingOutlined style={{ color: '#ccc', fontSize: 50, margin: 20 }} />\n                  <p style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                    Loading...\n                  </p>\n                </div>\n              )}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <ReactPaginate\n        previousLabel={'< Previous'}\n        nextLabel={'Next >'}\n        breakLabel={'...'}\n        pageCount={page}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={3}\n        onPageChange={handlePageClick}\n        containerClassName={'pagination justify-content-center'}\n        pageClassName={'page-item'}\n        pageLinkClassName={'page-link'}\n        previousClassName={'page-item'}\n        previousLinkClassName={'page-link'}\n        nextClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        breakClassName={'page-item'}\n        breakLinkClassName={'page-link'}\n        activeClassName={'active'}\n      />\n    </div>\n  )\n}\nexport default Tables\n"],"names":["token","localStorage","getItem","useState","data","setData","page","setPage","dataForm","setDataForm","detail","setDetail","nickname","setNickname","from_acc","setFrom_acc","getSignature","axios","method","url","process","headers","Authorization","params","nickName","from_account","result","console","log","getPage","total","res","Math","ceil","useEffect","fetchPage","currentPage","handlePageClick","selected","pageFormServer","ss","getDetail","id","handleDetail","className","visible","onClose","xs","scope","NickName","type","tokenAmount","pointAmount","from","to","color","onClick","placeholder","onChange","event","target","value","variant","style","width","display","justifyContent","flexDirection","FileExclamationOutlined","fontSize","margin","map","item","index","slice","xmlns","fill","viewBox","stroke","height","cursor","d","LoadingOutlined","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName"],"sourceRoot":""}